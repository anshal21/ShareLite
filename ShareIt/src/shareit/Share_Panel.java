/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shareit;

import com.sun.org.apache.xml.internal.resolver.helpers.PublicId;
import java.awt.Color;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.DateFormat;
import java.util.Date;
import static java.util.Optional.empty;
import static java.util.OptionalDouble.empty;
import static java.util.OptionalLong.empty;
import java.util.logging.Level;
import java.util.logging.Logger;
import static java.util.stream.DoubleStream.empty;
import javax.net.ssl.SSLServerSocket;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Anshal Dwivedi
 */
public class Share_Panel extends javax.swing.JFrame {
public String file_path=null;
    /**
     * Creates new form Share_Panel
     */File history;
     FileOutputStream his_fos;
     BufferedWriter b;
    public Share_Panel() throws IOException {
        initComponents();
        Ip_Field.setText("");
       
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        Choose_file = new javax.swing.JButton();
        Send_file = new javax.swing.JButton();
        Recieve_file = new javax.swing.JButton();
        UrlPanel = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Ip_Field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Progress = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        Setting = new javax.swing.JMenu();
        History = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LOotLo");
        setResizable(false);

        Choose_file.setBackground(new java.awt.Color(135, 206, 235));
        Choose_file.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Choose_file.setForeground(new java.awt.Color(255, 255, 255));
        Choose_file.setText("Choose File");
        Choose_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Choose_fileActionPerformed(evt);
            }
        });

        Send_file.setBackground(new java.awt.Color(135, 206, 235));
        Send_file.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Send_file.setForeground(new java.awt.Color(255, 255, 255));
        Send_file.setText("Send");
        Send_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_fileActionPerformed(evt);
            }
        });

        Recieve_file.setBackground(new java.awt.Color(135, 206, 235));
        Recieve_file.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Recieve_file.setForeground(new java.awt.Color(255, 255, 255));
        Recieve_file.setText("Recieve");
        Recieve_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recieve_fileActionPerformed(evt);
            }
        });

        UrlPanel.setEditable(false);
        UrlPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anshal Dwivedi\\Documents\\NetBeansProjects\\ShareIt\\fi.jpg")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("File To Send:-");

        Ip_Field.setText(" ");
        Ip_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ip_FieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Reciever's IP:-");

        Progress.setBackground(new java.awt.Color(255, 255, 255));
        Progress.setForeground(new java.awt.Color(79, 148, 205));
        Progress.setStringPainted(true);

        Setting.setText("Settings");
        Setting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SettingMouseClicked(evt);
            }
        });
        jMenuBar1.add(Setting);

        History.setText("History");
        jMenuBar1.add(History);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Progress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Choose_file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Send_file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Recieve_file, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(UrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(Ip_Field))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Ip_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UrlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(Choose_file, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Send_file, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Recieve_file, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Choose_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Choose_fileActionPerformed
        // TODO add your handling code here:
       Choose_thread ct=new Choose_thread();
       ct.start();
    }//GEN-LAST:event_Choose_fileActionPerformed

    private void Send_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_fileActionPerformed
        // TODO add your handling code here:
       Send_Thread st=new Send_Thread();
       st.start();
       
    }//GEN-LAST:event_Send_fileActionPerformed

    private void Recieve_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recieve_fileActionPerformed
    Rec_Thread rt=new Rec_Thread();
    rt.start();
    }//GEN-LAST:event_Recieve_fileActionPerformed

    private void Ip_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ip_FieldActionPerformed
   
    }//GEN-LAST:event_Ip_FieldActionPerformed

    private void SettingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_SettingMouseClicked
    public class Send_Thread extends Thread{
        public void run(){
             String rec_ip=Ip_Field.getText();
        if(rec_ip.equals(""))
        {
            System.out.println("bhai ip to daal");
            JOptionPane jo=new JOptionPane("ReciverIp is empty", 1);
        }
        else
        {
            Send_file.setEnabled(false);
            Recieve_file.setEnabled(false);
         File file_to_send=new File(file_path);
         System.out.println("send Button Active");
            try {
                int l=file_path.length();
                int i=l-1;
                while(file_path.charAt(i)!='\\')
                {
                    i--;
                }
                String file_name;
                file_name=file_path.substring(i+1);
                FileInputStream fis=new FileInputStream(file_to_send);
                BufferedInputStream bis=new BufferedInputStream(fis);
                int file_size=(int)file_to_send.length();
                byte[] barry=new byte[file_size];
                bis.read(barry, 0,barry.length);
              
                System.out.println("send Button Active level-2");
                Socket s=new Socket(rec_ip, 10003);
                
                DataOutputStream dos=new DataOutputStream(s.getOutputStream());
               DataInputStream dis_send=new DataInputStream(s.getInputStream());
                
                System.out.println("send Button Active level-3");
                
             
                dos.writeInt(file_size);
                dos.writeUTF(file_name);
                OutputStream os=s.getOutputStream();
              
                    os.write(barry,0,barry.length);
                    os.flush();
                    System.out.println("Done Sending");
                    System.out.println("send Button Active level-4");
               dos.close();
               s.close();
               os.close();
               Send_file.setEnabled(true);
            Recieve_file.setEnabled(true);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Share_Panel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Share_Panel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } 
        }
    }
 
    public class Rec_Thread extends Thread{
        public void run(){
            try {
                Progress.setValue(0);
        // TODO add your handling code here:
                Recieve_file.setEnabled(false);
                Send_file.setEnabled(false);
        ServerSocket ss=new ServerSocket(10003);
        System.out.println("waiting...");
        Socket rec_socket=ss.accept();
        System.out.println("Connected");
           
                    
          
        DataInputStream dis=new DataInputStream(rec_socket.getInputStream());
        //DataOutputStream dos=new DataOutputStream(rec_socket.getOutputStream());
        int size=dis.readInt()+10;
        byte[] rec_barry=new byte[size];
        String file_location="C:\\SHAREit";
        File fl=new File(file_location);
        fl.mkdirs();
        System.out.println("folder Created");
        String file_name=dis.readUTF();
        file_location=file_location+"\\"+file_name;
        fl=new File(file_location);
        fl.createNewFile();
        System.out.println("Size: "+size+"and"+"Path"+file_name);
        InputStream is=rec_socket.getInputStream();
        
        FileOutputStream fos=new FileOutputStream(fl);
        BufferedOutputStream bos=new BufferedOutputStream(fos);
        int bytesRead;
        int current=0;
                bytesRead = is.read(rec_barry,0,rec_barry.length);
          current = bytesRead;
                System.out.println("Byte Recieved"+current);
                Progress.setValue(100*current/(size-10));
              // dos.writeInt(100*current/(size-10));
      do {
         bytesRead =
            is.read(rec_barry, current, (rec_barry.length-current));
         if(bytesRead >= 0) current += bytesRead;
         System.out.println("Byte Recieved"+current);
          Progress.setValue(100*current/(size-10));
         // dos.writeInt(100*current/(size-10));
      } while(bytesRead > -1);
      System.out.println("Byte Recieved"+current);
               Progress.setValue(100*current/(size-10));
          //   dos.writeInt(100*current/(size-10));
      bos.write(rec_barry, 0 , current);
      bos.flush();
      System.out.println("File " + fl
          + " downloaded (" + current + " bytes read)");
        
        dis.close();
        is.close();
        fos.flush();
        fos.close();
        bos.flush();
        bos.close();
        rec_socket.close();
        ss.close();
        
        System.out.println("Transfer Complete");
                Recieve_file.setEnabled(true);
                Send_file.setEnabled(true);
    } catch (IOException ex) {
        Logger.getLogger(Share_Panel.class.getName()).log(Level.SEVERE, null, ex);
    }
        }
    }
    public class Choose_thread extends Thread{
        public void run(){
             JFileChooser jfc=new JFileChooser();
       
        jfc.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result=jfc.showOpenDialog(null);
        if(result==JFileChooser.APPROVE_OPTION)
        {
            File file=jfc.getSelectedFile();
             file_path=file.getAbsolutePath();
           UrlPanel.setText(file_path);
            
            
        }
        }
    }
   
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Choose_file;
    private javax.swing.JMenu History;
    public javax.swing.JTextField Ip_Field;
    private javax.swing.JProgressBar Progress;
    private javax.swing.JButton Recieve_file;
    private javax.swing.JButton Send_file;
    private javax.swing.JMenu Setting;
    private javax.swing.JTextField UrlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    // End of variables declaration//GEN-END:variables
}
